<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JS深拷贝</title>
      <link href="2021/02/26/JS%E6%B7%B1%E6%8B%B7%E8%B4%9D/"/>
      <url>2021/02/26/JS%E6%B7%B1%E6%8B%B7%E8%B4%9D/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是深拷贝？"><a href="#什么是深拷贝？" class="headerlink" title="什么是深拷贝？"></a>什么是深拷贝？</h2><blockquote><p>在JavaScript中，数据类型有<strong>基本数据类型</strong>和<strong>引用数据类型</strong></p><p>有时候会遇到将一个数组或者对象赋值给另一个变量，例如</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">let</span> arr2 = arr1</span><br><span class="line"><span class="built_in">console</span>.log(arr2) <span class="comment">// [1, 2, 3]</span></span><br><span class="line">arr2[<span class="number">0</span>] = <span class="string">'hello'</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1, arr2) <span class="comment">// ['hello', 2, 3] ['hello', 2, 3]</span></span><br></pre></td></tr></table></figure><p>上面赋值操作中，arr1是一个数组，再将arr1赋值给arr2时，arr1和arr2都会将指向同一个数据，在改变arr2的值时，arr1也会同时发生改变，如何让arr1和arr2互补影响呢？</p><a id="more"></a><h3 id="递归拷贝"><a href="#递归拷贝" class="headerlink" title="递归拷贝"></a>递归拷贝</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line"><span class="comment">// 判断是否是对象</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> obj !== <span class="string">'object'</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> obj</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果是数组</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(obj)) &#123;</span><br><span class="line"><span class="keyword">return</span> [...obj]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> result = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">result[key] = copy(obj[key])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>测试</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">name: <span class="string">'hello'</span>,</span><br><span class="line">age: <span class="number">18</span>,</span><br><span class="line">arr: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">other: &#123;</span><br><span class="line">desc: <span class="string">'test!'</span>,</span><br><span class="line">date: <span class="string">'2021-2-26 21:57:55'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> o = copy(obj)</span><br><span class="line">o.age = <span class="number">20</span></span><br><span class="line">o.other.desc = <span class="string">'Good!'</span></span><br><span class="line">o.arr[<span class="number">1</span>] = <span class="string">'hello'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj)</span><br><span class="line"><span class="built_in">console</span>.log(o)</span><br></pre></td></tr></table></figure><blockquote><p>结果</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> node deepClone.js</span></span><br><span class="line">&#123;</span><br><span class="line">  name: 'hello',</span><br><span class="line">  age: 18,</span><br><span class="line">  arr: [ 1, 2, 3 ],</span><br><span class="line">  other: &#123; desc: 'test!', date: '2021-2-26 21:57:55' &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  name: 'hello',</span><br><span class="line">  age: 20,</span><br><span class="line">  arr: [ 1, 'hello', 3 ],</span><br><span class="line">  other: &#123; desc: 'Good!', date: '2021-2-26 21:57:55' &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>可以看到的是：第二个对象的<strong>age</strong>  <strong>arr[1]</strong>  <strong>other.desc</strong>都发生了改变，但是并没有影响到<strong>obj</strong></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript实现一个简单的链表</title>
      <link href="2020/11/28/JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%93%BE%E8%A1%A8/"/>
      <url>2020/11/28/JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是链表"><a href="#什么是链表" class="headerlink" title="什么是链表"></a>什么是链表</h2><p>在目前编译性的语言中，（如 C、Java），都提供了基本的数组，但是基本的数组的长度是不可变的（Java当中有Map，Set之类的集合可以实现可变数组）</p><p>加入此时我们需要自己定义一个数据结构，需要它可变，那么，链表必将是我们学习编程的必须要了解的一种数据结构。</p><blockquote><p>链表由一个一个的节点相关联，组成了一串数据链，每个节点中包含当前节点的数据以及指向了下一个节点的地址引用。</p></blockquote><h2 id="JS实现单向链表"><a href="#JS实现单向链表" class="headerlink" title="JS实现单向链表"></a>JS实现单向链表</h2><blockquote><p>我们来分析一下链表，链表由一个一个的节点组成一串数据链，每个节点包含有当前节点的数据和下一个节点的引用，所以，我们先定义一个Node类：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(item) &#123;</span><br><span class="line">        <span class="keyword">this</span>.data = item</span><br><span class="line">        <span class="keyword">this</span>.next = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 这里在Node节点类里添加add()是希望由Node类来实现具体的添加</span></span><br><span class="line">    add(item) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.next === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.next = <span class="keyword">new</span> Node(item)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.next.add(item)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>初次之外，还需要一个用来管理链表的类：</p><p>链表应该有一个根节点，所以构造函数里添加head属性，用来保存根节点</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Linked</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">this</span>.head = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">this</span>.length = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>链表有了，但是链表应该包含的功能：</p><ul><li>add() 添加节点</li><li>remove() 删除节点</li><li>find() 查找节点</li><li>insert() 插入节点</li><li>update() 修改节点</li><li>size() 返回链表长度</li><li>show() 显示所有的节点</li></ul><h3 id="实现添加add"><a href="#实现添加add" class="headerlink" title="实现添加add()"></a>实现添加add()</h3><blockquote><p>实现思路：如果根节点为null，则创建新的节点赋值给根节点，否则调用Node节点自己的add方法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">add(item) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.head == <span class="literal">null</span>) &#123; <span class="comment">// 如果根节点没有数据，则创建根节点</span></span><br><span class="line">        <span class="keyword">this</span>.head = <span class="keyword">new</span> Node(item)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.head.add(item)<span class="comment">// 如果根节点有数据，则条用根节点对象的add()方法</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.length++</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="remove-和-prev"><a href="#remove-和-prev" class="headerlink" title="remove() 和 prev()"></a>remove() 和 prev()</h3><blockquote><p>实现思路：删除某个节点就等于将要删除的节点的前一个节点的next指向要删除的next</p></blockquote><p><img src="/2020/11/28/JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%93%BE%E8%A1%A8/1.png" alt="img"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回item的上一个Node节点</span></span><br><span class="line">prev(item) &#123;</span><br><span class="line">    <span class="keyword">let</span> prevNode = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">let</span> currNode = <span class="keyword">this</span>.head</span><br><span class="line">    <span class="keyword">while</span>(currNode !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (currNode.data === item) &#123;</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">        prevNode = currNode</span><br><span class="line">        currNode = currNode.next</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (currNode === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found: '</span> + item)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> prevNode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前一个节点的next指向要删除的next，实现删除！</span></span><br><span class="line">remove(item) &#123;</span><br><span class="line">    <span class="keyword">let</span> prevNode = <span class="keyword">this</span>.prev(item)</span><br><span class="line">    prevNode.next = item.next</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="find"><a href="#find" class="headerlink" title="find()"></a>find()</h3><blockquote><p>由于已经实现了prev()，所以可以直接返回prev()返回的Node节点的next就可以了！</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find(item) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.prev(item).next</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="insert"><a href="#insert" class="headerlink" title="insert()"></a>insert()</h3><blockquote><p>如何插入到指定No的之前？</p><p>A B 两节点，将C插入到B之前，则可以将：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C.next= B </span><br><span class="line">A.next = C</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert(item, before) &#123;</span><br><span class="line">    <span class="keyword">let</span> prevNode = <span class="keyword">this</span>.prev(before)</span><br><span class="line">    <span class="keyword">let</span> newNode = <span class="keyword">new</span> Node(item)</span><br><span class="line">    newNode.next = prevNode.next</span><br><span class="line">    prevNode.next = newNode</span><br><span class="line">    <span class="keyword">this</span>.length++</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="update"><a href="#update" class="headerlink" title="update()"></a>update()</h3><blockquote><p>只需要找到需要更新的节点，将节点的data赋值为新的数据即可</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update(oldItem, newItem) &#123;</span><br><span class="line"><span class="keyword">this</span>.find(oldItem).data = newItem</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="size"><a href="#size" class="headerlink" title="size()"></a>size()</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">size() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.length</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="show"><a href="#show" class="headerlink" title="show()"></a>show()</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">show() &#123;</span><br><span class="line">    <span class="keyword">let</span> currNode = <span class="keyword">this</span>.head</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">'[ '</span></span><br><span class="line">    <span class="keyword">while</span> (currNode) &#123;</span><br><span class="line">    str += currNode.data + <span class="string">' -&gt; '</span></span><br><span class="line">    currNode = currNode.next</span><br><span class="line">    &#125;</span><br><span class="line">    str += <span class="string">'null ]'</span></span><br><span class="line">    <span class="built_in">console</span>.log(str) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="让我们来运行一下吧！"><a href="#让我们来运行一下吧！" class="headerlink" title="让我们来运行一下吧！"></a>让我们来运行一下吧！</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list = <span class="keyword">new</span> Linked()</span><br><span class="line">list.add(<span class="string">'A'</span>)</span><br><span class="line">list.add(<span class="string">'B'</span>)</span><br><span class="line">list.add(<span class="string">'C'</span>)</span><br><span class="line">list.show()</span><br><span class="line">list.insert(<span class="string">'a'</span>, <span class="string">'B'</span>)</span><br><span class="line">list.show()</span><br><span class="line">list.update(<span class="string">'a'</span>,<span class="string">'Hello'</span>)</span><br><span class="line">list.show()</span><br><span class="line"><span class="built_in">console</span>.log(list.size())</span><br></pre></td></tr></table></figure><blockquote><p>结果：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PC:~/Desktop/js$ node Linked.js </span><br><span class="line">[ A -&gt; B -&gt; C -&gt; null ]</span><br><span class="line">[ A -&gt; a -&gt; B -&gt; C -&gt; null ]</span><br><span class="line">[ A -&gt; Hello -&gt; B -&gt; C -&gt; null ]</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>至此，一个简单的单向链表就完成了！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>序列化与反序列化简单案例</title>
      <link href="2020/08/09/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/"/>
      <url>2020/08/09/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h3><blockquote><p>序列化 (Serialization)是将对象的状态信息转换为可以存储或传输的形式的过程。在序列化期间，对象将其当前状态写入到临时或持久性存储区。以后，可以通过从存储区中读取或反序列化对象的状态，重新创建该对象。——百度百科</p></blockquote><hr><p>简单点来说，序列化就是将一个存在在内存当中的一个对象转化为一个可以存储的二进制数据，以便用来进行数据传输或者保存，那么，反序列化就是将一个序列化后的某个数据再转化为对象的过程。</p><p>假如有一个<strong>Person</strong>类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"姓名："</span> + <span class="keyword">this</span>.name + <span class="string">"、年龄："</span> + <span class="keyword">this</span>.age;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在，我可以通过 <strong>new</strong> 关键字来实例化一个对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Person person = <span class="keyword">new</span> Person(<span class="string">"张三"</span>, <span class="number">20</span>);</span><br></pre></td></tr></table></figure><p>这样，我们就可以创建（实例化）一个对象了，但是，如果我需要将这个对象保存起来呢？该如何实现？</p><a id="more"></a><h4 id="Serializable-接口"><a href="#Serializable-接口" class="headerlink" title="Serializable 接口"></a>Serializable 接口</h4><p>当一个类实现了Serializable接口，不用实现任何方法，该类的对象就是可以序列化的。</p><p>下面，我们对<strong>Person</strong>类进行改造，使<strong>Person</strong>类的对象可以被序列化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"姓名："</span> + <span class="keyword">this</span>.name + <span class="string">"、年龄："</span> + <span class="keyword">this</span>.age;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们仅仅追加了 <strong><em>implements Serializable</em></strong> ，除此之外，没有添加任何的东西，<strong>Person</strong>类便可以被序列化。</p><h4 id="ObjectInputStream-ObjectOutputStream-对象输入-输出流"><a href="#ObjectInputStream-ObjectOutputStream-对象输入-输出流" class="headerlink" title="ObjectInputStream / ObjectOutputStream 对象输入/输出流"></a>ObjectInputStream / ObjectOutputStream 对象输入/输出流</h4><p>既然要将一个对象保存起来或者是从文件读取，那么就要使用到ObjectInputStream / ObjectOutputStream 对象输入/输出流进行保存与读取。</p><table><thead><tr><th align="center">类</th><th align="center">主要方法</th><th align="center">主要方法说明</th></tr></thead><tbody><tr><td align="center">ObjectInputStream</td><td align="center">readObject()</td><td align="center">反序列化（读取一个序列化对象）</td></tr><tr><td align="center">ObjectOutputStream</td><td align="center">writeObject(obj)</td><td align="center">序列化（将对象以流的形式写出到硬盘上的某个文件）</td></tr></tbody></table><h4 id="序列化一个对象"><a href="#序列化一个对象" class="headerlink" title="序列化一个对象"></a>序列化一个对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 创建一个File对象保存序列化后的对象</span></span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="string">"D:"</span> + File.separator + <span class="string">"person.ser"</span>);</span><br><span class="line">Person person = <span class="keyword">new</span> Person(<span class="string">"张三"</span>, <span class="number">20</span>);</span><br><span class="line"><span class="comment">// ObjectOutputStream构造器接受一个FileOutputStream对象</span></span><br><span class="line">ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(file));</span><br><span class="line">oos.writeObject(obj); <span class="comment">// 序列化</span></span><br><span class="line">oos.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后，D盘会生成一个person.ser的二进制文件。</p><h4 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="string">"D:"</span> + File.separator + <span class="string">"person.ser"</span>);</span><br><span class="line">ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(file));</span><br><span class="line">Object obj = ois.readObject(); <span class="comment">// 反序列化</span></span><br><span class="line">System.out.println(obj); <span class="comment">// 输出</span></span><br><span class="line">ois.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后输出person.ser反序列化后的对象信息：</p><p><img src="/2020/08/09/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/1.png" alt="输出"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无限连载小说之大水比</title>
      <link href="2020/07/17/%E6%97%A0%E9%99%90%E8%BF%9E%E8%BD%BD%E5%B0%8F%E8%AF%B4%E4%B9%8B%E5%A4%A7%E6%B0%B4%E6%AF%94/"/>
      <url>2020/07/17/%E6%97%A0%E9%99%90%E8%BF%9E%E8%BD%BD%E5%B0%8F%E8%AF%B4%E4%B9%8B%E5%A4%A7%E6%B0%B4%E6%AF%94/</url>
      
        <content type="html"><![CDATA[<h2 id="无限连载小说之大水比"><a href="#无限连载小说之大水比" class="headerlink" title="无限连载小说之大水比"></a>无限连载小说之大水比</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>笔者生活中在一个充满各种奇迹的世界上，见过非常多的奇迹，新认识了非常多的词汇，现将这些奇闻趣事一一分享出来，也让这些奇闻趣事不石沉大海！</p><h3 id="第一章-钓鱼佬未时昂公刺肚"><a href="#第一章-钓鱼佬未时昂公刺肚" class="headerlink" title="第一章 钓鱼佬未时昂公刺肚"></a>第一章 钓鱼佬未时昂公刺肚</h3><p>​    午时，一群钓鱼佬三人便前往一条有着各路神仙的小溪流，准备捉拿一些神兽，一人轻装上阵，一人满腹武装，蓄势待发，准备大战一场，一人骑着战马，带长剑若干。一同来到了这条小溪的一边，布上法阵，手持长剑。准备充足之后，三人纷纷施法，便将长剑架起，等待各种神兽前来。</p><p>​    突然，其中一人的长剑便感应到了神兽，那人便拿起长剑，使出收兽之术，手一提，那神兽便被长剑的强大束缚力所困住，不知道是施法过度还是受到了神兽的反击，竟被一黄色带有利刺的神兽所刺到肚子，霎时，那人便屏住丹田，双手护住伤口，似笑非笑，似哭非哭，好生刺激，便引来旁边两人的注意，此时，两人便拿起记录时光的法器，记下了此时的那刻。片刻之后，便又开始进行守株待兔的等待……</p><h3 id="第二章-钓鱼佬爆护之回家遭暗算"><a href="#第二章-钓鱼佬爆护之回家遭暗算" class="headerlink" title="第二章 钓鱼佬爆护之回家遭暗算"></a>第二章 钓鱼佬爆护之回家遭暗算</h3><p>未完待续……</p>]]></content>
      
      
      
        <tags>
            
            <tag> 喜闻乐见 </tag>
            
            <tag> 日常水 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单例设计模式是个什么东西？</title>
      <link href="2020/03/18/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E4%B8%9C%E8%A5%BF/"/>
      <url>2020/03/18/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E4%B8%9C%E8%A5%BF/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在学习Java的过程中，各种设计模式便扑面而来，笔者目前便接触到了单例设计模式，与之对应的还有多例设计模式。下面便奉上个人的领悟（笔者也只是个初入Java的学习者，如有错误也是在所难免的）。</p></blockquote><h3 id="什么是单例设计模式"><a href="#什么是单例设计模式" class="headerlink" title="什么是单例设计模式"></a>什么是单例设计模式</h3><p>单例设计模式，重点就在这个”单“上，指的是一个类只能实例化一个对象。</p><p>假设现在有一个Singleton类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello !"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般情况下，我们都是直接通过new关键字来获得一个实例化对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Singleton s = <span class="keyword">new</span> Singleton();</span><br></pre></td></tr></table></figure><p>可是如果能够new出一个实例化对象，那么一定可以再new出更多的实例化对象，显然是不符合单例设计模式的要求的。因此我们需要将类的设计做一些改变，使之不能被直接new出来，所以我们将类的构造方法设为私有化的，即为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;&#125;;</span><br></pre></td></tr></table></figure><a id="more"></a><p>这还不够，我们还需要在类的内部提供一个static的属性以及方法，用于保存实例化之后的对象以及提供给外部获取此对象的方法。于是整个类的设计为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello !"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，我们尝试来new一下类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        Singleton s = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用javac命令编译以后，便直接报错：</p><p><img src="/2020/03/18/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E4%B8%9C%E8%A5%BF/1.jpg" alt="1"></p><p>可以看到，现在是不能够通过new关键字来实例化一个对象了。我们应该通过类的静态方法获得类的实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        Singleton s = Singleton.getInstance();</span><br><span class="line">        s.hello();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译并执行</p><p><img src="/2020/03/18/%E5%8D%95%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E4%B8%9C%E8%A5%BF/2.jpg" alt="2"></p><p>可以看到，编译成功并且执行了方法hello()。</p><p>到此，一个基本的单例设计模式便完成了，我们把上面这种实现方式也称为饿汉式。饿汉式在类加载时就会实例化对象，因此，在多线程的情况下，可能会出现同步问题。因此，还有一种方式称为懒汉式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123; <span class="comment">// 使用synchronized修饰方法使之同步</span></span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello !"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而，synchronized修饰的方法在执行效率上通常较低，所以最好的办法是使用双重校验锁（DCL  double-checked locking）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">null</span>();</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span>(Singleton<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello !"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="END"><a href="#END" class="headerlink" title="END!"></a>END!</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java I/O 学习笔记</title>
      <link href="2020/02/29/Java-IO-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%8A/"/>
      <url>2020/02/29/Java-IO-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="Java-I-O"><a href="#Java-I-O" class="headerlink" title="Java I/O"></a>Java I/O</h2><h3 id="I-O-文件对象"><a href="#I-O-文件对象" class="headerlink" title="I/O 文件对象"></a>I/O 文件对象</h3><h5 id="创建一个文件对象"><a href="#创建一个文件对象" class="headerlink" title="创建一个文件对象"></a>创建一个文件对象</h5><p><code>File f = new File(&quot;d:/test&quot;);</code></p><h5 id="文件对象常用方法"><a href="#文件对象常用方法" class="headerlink" title="文件对象常用方法"></a>文件对象常用方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">f.exists() <span class="comment">//文件是否存在</span></span><br><span class="line">f.isDirectory() <span class="comment">//是否是文件夹</span></span><br><span class="line">f.isFile(); <span class="comment">//是否是文件</span></span><br><span class="line">f.length(); <span class="comment">//文件长度</span></span><br><span class="line">f.lastModified() <span class="comment">//文件最后修改时间</span></span><br><span class="line">f.renameTo(File Object); <span class="comment">//文件重命名，参数为文件对象</span></span><br><span class="line"></span><br><span class="line">f.list(); <span class="comment">//以字符串数组形式返回当前文件夹下所有文件</span></span><br><span class="line">f.ListFiles(); <span class="comment">//以文件数组形式返回……</span></span><br><span class="line">f.getParent(); <span class="comment">//返回父文件夹（一般相对于文件） --字符串形式</span></span><br><span class="line">f.getParentFile(); <span class="comment">//同上 --文件形式</span></span><br><span class="line">f.mkdir(); <span class="comment">//创建文件夹（父文件夹不存在，创建无效）</span></span><br><span class="line">f.mkdirs(); <span class="comment">//创建文件夹，父文件夹不存在则会创建父文件夹</span></span><br><span class="line">f.creatNewFile(); <span class="comment">//创建一个空文件，父文件夹不存在则会抛出异常</span></span><br><span class="line">f.getParentFile().mkdirs(); <span class="comment">//创建空文件时，通常会创建父目录</span></span><br><span class="line">f.listRoots(); <span class="comment">//列出根目录（Windows下列出盘符）</span></span><br><span class="line">f.delete(); <span class="comment">//删除文件</span></span><br><span class="line">f.deleteOnExit(); <span class="comment">//JVM结束时删除文件，常用于删除临时文件</span></span><br></pre></td></tr></table></figure> <a id="more"></a><h2 id="Stream-流"><a href="#Stream-流" class="headerlink" title="Stream 流"></a>Stream 流</h2><blockquote><p>Java使用流在不同介质之间进行数据交换。</p><p>流分为输入流(InputStream)和输出流(OutputStream)</p></blockquote><h5 id="文件输入流-FileInputStream"><a href="#文件输入流-FileInputStream" class="headerlink" title="文件输入流( FileInputStream )"></a>文件输入流( FileInputStream )</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个文件，并创建一个基于此文件的输入流（实现数据的读取）</span></span><br><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"d:/test.txt"</span>);</span><br><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(f);</span><br></pre></td></tr></table></figure><h5 id="文件输入流-FileOutputStream"><a href="#文件输入流-FileOutputStream" class="headerlink" title="文件输入流( FileOutputStream )"></a>文件输入流( FileOutputStream )</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个文件，并创建一个基于此文件的输出流（实现数据的读取）</span></span><br><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"d:/test.txt"</span>);</span><br><span class="line">FileOutputStream fis = <span class="keyword">new</span> FileOutputStream(f);</span><br></pre></td></tr></table></figure><h5 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h5><blockquote><p>以字节的形式读取和写入文件</p></blockquote><ul><li><p>字节输入流 InputStream</p></li><li><p>字节输出流 OutputStream</p><h6 id="以字节形式读取文件内容"><a href="#以字节形式读取文件内容" class="headerlink" title="以字节形式读取文件内容"></a>以字节形式读取文件内容</h6></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"d:/test.txt"</span>);</span><br><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(f);</span><br><span class="line"><span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>)f.length()];</span><br><span class="line"><span class="comment">//以字节的形式读取所有内容</span></span><br><span class="line">fis.read(data);</span><br><span class="line">fis.close();</span><br></pre></td></tr></table></figure><h6 id="以字节形式写入文件内容"><a href="#以字节形式写入文件内容" class="headerlink" title="以字节形式写入文件内容"></a>以字节形式写入文件内容</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"d:/test.txt"</span>);</span><br><span class="line"><span class="keyword">byte</span> data[] = &#123;<span class="string">'H'</span>,<span class="string">'e'</span>,<span class="string">'l'</span>,<span class="string">'l'</span>,<span class="string">'o'</span>,<span class="string">','</span>,<span class="string">'W'</span>,<span class="string">'o'</span>,<span class="string">'r'</span>,<span class="string">'l'</span>,<span class="string">'d'</span>,<span class="string">'!'</span>&#125;;</span><br><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(f);</span><br><span class="line"><span class="comment">//把数据写入到输出流</span></span><br><span class="line">fos.write(data);</span><br><span class="line">fos.close();</span><br></pre></td></tr></table></figure><h6 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h6><ul><li><p>拆分文件</p><blockquote><p>拆分的对象是一首歌，拆分后每份文件的大小为500KB。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> size = <span class="number">500</span> * <span class="number">1024</span>;</span><br><span class="line">File mp3 = <span class="keyword">new</span> File(<span class="string">"c:/test/dnf.mp3"</span>);</span><br><span class="line">splitFile(mp3, size);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拆分文件，按字节拆分</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> file 要拆分的文件对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> size 拆分文件的平均大小(字节)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">splitFile</span><span class="params">(File file, <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> == file.length())</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"文件长度为0，不可拆分"</span>);</span><br><span class="line"></span><br><span class="line">String fileName = file.getName();</span><br><span class="line"><span class="keyword">int</span> netIndex = fileName.indexOf(<span class="string">"."</span>);</span><br><span class="line">String suffix = fileName.substring(netIndex, fileName.length());</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] fileContent = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>)file.length()];</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">fis.read(fileContent);</span><br><span class="line">fis.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fileNumber = (<span class="keyword">int</span>)Math.ceil((<span class="keyword">double</span>)fileContent.length / size);</span><br><span class="line">System.out.println(<span class="string">"文件大小为："</span> + file.length() + <span class="string">"字节"</span>);</span><br><span class="line">System.out.println(<span class="string">"拆分为"</span> + fileNumber + <span class="string">"个文件"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;fileNumber; i++) &#123;</span><br><span class="line"></span><br><span class="line">String newFileName = fileName.substring(<span class="number">0</span>, netIndex) + <span class="string">"_"</span> + i + suffix;</span><br><span class="line">File f_temp = <span class="keyword">new</span> File(file.getParent(), newFileName);</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] tempContent;</span><br><span class="line"><span class="keyword">if</span>(i &lt; fileNumber - <span class="number">1</span>) &#123;</span><br><span class="line">tempContent = Arrays.copyOfRange(fileContent, size * i, size * (i + <span class="number">1</span>));</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">tempContent = Arrays.copyOfRange(fileContent, size * i, fileContent.length);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(f_temp);</span><br><span class="line">fos.write(tempContent);</span><br><span class="line">fos.close();</span><br><span class="line">System.out.printf(<span class="string">"文件：%s\t大小：%d字节\n"</span>,f_temp.getAbsolutePath(), tempContent.length);</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>合并文件</p><blockquote><p>将上文拆分的文件合并为一个新文件。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * mergeFiles(String [目标文件夹], String [合成后的文件名], String [要合并的文件名]);</span></span><br><span class="line"><span class="comment"> * String [要合并的文件名] 例如 a_1.mp3 a_2.mp3 则只需要传入a.mp3即可</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">mergeFiles(<span class="string">"c:/test"</span>, <span class="string">"new_dnf.mp3"</span>, <span class="string">"dnf.mp3"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeFiles</span><span class="params">(String folder, String destName, String fileName)</span> </span>&#123;</span><br><span class="line">File destFile = <span class="keyword">new</span> File(folder,destName);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(destFile);</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">File eachFile = <span class="keyword">new</span> File(folder, fileName.substring(<span class="number">0</span>, fileName.indexOf(<span class="string">"."</span>)) + <span class="string">"_"</span> + index + <span class="string">".mp3"</span>);</span><br><span class="line"><span class="keyword">if</span>(!eachFile.exists()) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(eachFile);</span><br><span class="line"><span class="keyword">byte</span>[] eachContent = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>)eachFile.length()];</span><br><span class="line">fis.read(eachContent);</span><br><span class="line">fis.close();</span><br><span class="line"></span><br><span class="line">fos.write(eachContent);</span><br><span class="line">fos.flush();</span><br><span class="line">System.out.println(<span class="string">"文件："</span> + eachFile + <span class="string">"写入到了文件："</span> + destFile);</span><br><span class="line">index++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fos.close();</span><br><span class="line">System.out.println(<span class="string">"写入成功！文件大小："</span> + destFile.length());</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="关闭流"><a href="#关闭流" class="headerlink" title="关闭流"></a>关闭流</h5><blockquote><p>所有的流在使用完毕之后，都应该关闭，以释放资源。</p><p>如果不关闭，则会导致对资源的占用以及浪费，影响业务的开展。</p></blockquote><ul><li><p>方法一：在try中关闭</p><blockquote><p>此种方法存在隐患</p><p>如果文件不存在或者读取时发生异常，导致抛出了异常，则不会进行关闭</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"d:/test.txt"</span>);</span><br><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(f);</span><br><span class="line"><span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>) f.length()];</span><br><span class="line">    fis.read(data);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">byte</span> b: data) &#123;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">fis.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法二：在finally中关闭</p><blockquote><p>标准的关闭方式</p><p>流的声明应在try外面，否则作用域无法抵达finally</p><p>关闭流时应进行判空处理并再次进行try catch处理</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"d:/test.txt"</span>);</span><br><span class="line">FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    fis = <span class="keyword">new</span> FileInputStream(f);</span><br><span class="line">    <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>) f.length()];</span><br><span class="line">    fis.read(data);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">byte</span> b: data) &#123;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != fis)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            fis.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法三：使用带资源的try语句（try-with-resource）</p><blockquote><p>JDK7中新增 try-with-resource 语法糖来打开资源，而无需手动关闭和回收相关资源。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"d:/test.txt"</span>);</span><br><span class="line"><span class="keyword">try</span> (FileInputStream fis = <span class="keyword">new</span> FileInputStream(f)) &#123;</span><br><span class="line">    <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>) f.length()];</span><br><span class="line">    fis.read(data);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">byte</span> b: data) &#123;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写的一个扫雷简单版</title>
      <link href="2019/11/29/%E5%86%99%E7%9A%84%E4%B8%80%E4%B8%AA%E6%89%AB%E9%9B%B7%E7%AE%80%E5%8D%95%E7%89%88/"/>
      <url>2019/11/29/%E5%86%99%E7%9A%84%E4%B8%80%E4%B8%AA%E6%89%AB%E9%9B%B7%E7%AE%80%E5%8D%95%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h2 id="JavaScript-扫雷-简单版"><a href="#JavaScript-扫雷-简单版" class="headerlink" title="JavaScript 扫雷[简单版]"></a>JavaScript 扫雷[简单版]</h2><p>目前迭代了两个版本，一个是最开始的初始版，一个是截止到发文之时的一个改进版。此文也将继续更新每个版本的迭代过程。</p><p><strong>点击右下角选择最后可以进行试玩</strong></p><p><strong><a href="/写的一个扫雷简单版/demo.html">试玩</a></strong></p><h3 id="第一版"><a href="#第一版" class="headerlink" title="第一版"></a>第一版</h3><p>界面以表格为载体呈现，通过创建一个和表格行数和列数相等的数组， 随机生成若干组随机数，取值为0到数组的最大下标-1，然后将其以数组的下标，在数组对应的位置赋值为1，其他的地方为0，后面以1为雷，0为安全的格子。</p><p><strong>效果：</strong></p><div align="center"><p>初始界面⬇<br><img src="/2019/11/29/%E5%86%99%E7%9A%84%E4%B8%80%E4%B8%AA%E6%89%AB%E9%9B%B7%E7%AE%80%E5%8D%95%E7%89%88/1.1.jpg" alt="1-1界面" style="zoom:50%;"></p><a id="more"></a><p>点击样式⬇<br><img src="/2019/11/29/%E5%86%99%E7%9A%84%E4%B8%80%E4%B8%AA%E6%89%AB%E9%9B%B7%E7%AE%80%E5%8D%95%E7%89%88/1.2.jpg" alt="1-2" style="zoom:50%;"></p><p>点到雷的提示⬇</p><p><img src="/2019/11/29/%E5%86%99%E7%9A%84%E4%B8%80%E4%B8%AA%E6%89%AB%E9%9B%B7%E7%AE%80%E5%8D%95%E7%89%88/1.3.jpg" alt="1-3"></p><p>点击提示的确定后会显示：</p><img src="/2019/11/29/%E5%86%99%E7%9A%84%E4%B8%80%E4%B8%AA%E6%89%AB%E9%9B%B7%E7%AE%80%E5%8D%95%E7%89%88/1.4.jpg" alt="1-4" style="zoom:50%;"></div><h2 id="主要思路："><a href="#主要思路：" class="headerlink" title="主要思路："></a>主要思路：</h2><ol><li>先有一个10x10的表格`</li><li>创建一个数组(10行10列)`</li><li>使用循环将数组所有值赋值为0`</li><li>使用随机数生成10对[0，10]之间的数作为数组的下标，将数组下标为其的值赋值为1`</li><li>为每一个表格节点添加一个input节点，并且设置其属性，设置单击事件的属性为带x,y坐标值的isBoom(x,y)函数`</li><li>把x,y作为数组下标在数组里获取对应的值，如果为1，则为雷，如果为0，则将其周围类的个数显示在对应的格子里`</li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><div align="center">HTML5+CSS部分</div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>扫雷<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">*&#123;</span><br><span class="line">padding: 0;</span><br><span class="line">margin: 0;</span><br><span class="line">&#125;</span><br><span class="line">h2&#123;</span><br><span class="line">text-align: center;</span><br><span class="line">padding-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">margin: 50px auto 0 auto;</span><br><span class="line">text-align: center;</span><br><span class="line">width: 450px;</span><br><span class="line">height: 450px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#operat</span>&#123;</span></span><br><span class="line">display: flex;</span><br><span class="line">justify-content: center;</span><br><span class="line">width: 450px;</span><br><span class="line">margin: 10px auto;</span><br><span class="line"><span class="css"><span class="comment">/* border: 1px solid #000; */</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.operat</span>&#123;</span></span><br><span class="line">background-color: red;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">width: 50px;</span><br><span class="line">height: 30px;</span><br><span class="line">&#125;</span><br><span class="line">input&#123;</span><br><span class="line">width: 100%;</span><br><span class="line">height: 100%;</span><br><span class="line">border: none;</span><br><span class="line">&#125;</span><br><span class="line">td&#123;</span><br><span class="line">width: 10px;</span><br><span class="line">height: 10px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.safe</span>&#123;</span></span><br><span class="line">background-color: limegreen;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.bomb</span>&#123;</span></span><br><span class="line">background-color: darkred;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.displayAll</span>&#123;</span></span><br><span class="line">background-color: darkorange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>扫雷<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">id</span>=<span class="string">"tab"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"operat"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><div align="center">JavaScript部分</div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> opera = <span class="built_in">document</span>.getElementById(<span class="string">'operat'</span>);</span><br><span class="line"><span class="keyword">var</span> btn1 = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line"><span class="keyword">var</span> btn2 = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line"><span class="comment">//没有雷的格子数量</span></span><br><span class="line"><span class="keyword">var</span> notBoomNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//正方形表格的边的格子数</span></span><br><span class="line"><span class="keyword">var</span> edgeLattice = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//雷的数量</span></span><br><span class="line"><span class="keyword">var</span> boomNum = <span class="number">20</span>;</span><br><span class="line"><span class="comment">// 用于存放雷的数组</span></span><br><span class="line"><span class="keyword">var</span> boomArray = <span class="keyword">new</span> <span class="built_in">Array</span>(edgeLattice);</span><br><span class="line"><span class="keyword">var</span> XLen = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> YLen = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; boomArray.length; i++) &#123;</span><br><span class="line">boomArray[i] = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">XLen = boomArray[<span class="number">0</span>].length;</span><br><span class="line">YLen = boomArray.length;</span><br><span class="line">notBoomNum = (XLen * YLen) - boomNum;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"共"</span> + XLen * YLen + <span class="string">"个格子"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"一共有"</span> + boomNum + <span class="string">"个雷"</span>);</span><br><span class="line"><span class="comment">//初始化雷的个数</span></span><br><span class="line">setBoom();</span><br><span class="line">createOperat();</span><br><span class="line">opera.appendChild(btn1);</span><br><span class="line"><span class="built_in">console</span>.log(boomArray);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> allRow = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'tr'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; YLen; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; XLen; j++) &#123;</span><br><span class="line"><span class="keyword">var</span> thisBtn = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line">thisBtn.setAttribute(<span class="string">"type"</span>, <span class="string">"button"</span>);</span><br><span class="line">thisBtn.setAttribute(<span class="string">"value"</span>, <span class="string">" "</span>);</span><br><span class="line">thisBtn.setAttribute(<span class="string">"onclick"</span>, <span class="string">"isBoom("</span> + i + <span class="string">","</span> + j + <span class="string">")"</span>);</span><br><span class="line">allRow[i].children[j].appendChild(thisBtn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setBoom</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; boomArray.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; boomArray[i].length; j++) &#123;</span><br><span class="line">boomArray[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//随机数生成boomNum个雷</span></span><br><span class="line"><span class="keyword">while</span> (count &lt; boomNum) &#123;</span><br><span class="line">x = <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random() * (YLen)) - <span class="number">1</span>;</span><br><span class="line">y = <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random() * (XLen)) - <span class="number">1</span>;</span><br><span class="line"><span class="comment">//防止类的位置重复</span></span><br><span class="line"><span class="keyword">if</span> (boomArray[x][y] == <span class="number">0</span>) &#123;</span><br><span class="line">boomArray[x][y] = <span class="number">1</span>;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isBoom</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> td = boomArray[x][y];</span><br><span class="line"><span class="keyword">if</span> (td != <span class="number">1</span>) &#123;</span><br><span class="line">notBoomNum--;</span><br><span class="line"><span class="built_in">console</span>.log(notBoomNum);</span><br><span class="line">showBoom(x, y);</span><br><span class="line"><span class="keyword">if</span> (notBoomNum == <span class="number">0</span>) &#123;</span><br><span class="line">alert(<span class="string">"恭喜您，成功通关！"</span>);</span><br><span class="line">location.reload();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">alert(<span class="string">"BOOM!!! Game Over！"</span>);</span><br><span class="line">showAllTd();</span><br><span class="line"><span class="comment">// showAllBoom();</span></span><br><span class="line"><span class="comment">// location.reload();</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showBoom</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (y == <span class="number">0</span>)</span><br><span class="line">num = boomArray[<span class="number">0</span>][<span class="number">1</span>] + boomArray[<span class="number">1</span>][<span class="number">1</span>] + boomArray[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (y == boomArray[x].length - <span class="number">1</span>)</span><br><span class="line">num = boomArray[<span class="number">0</span>][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y];</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">num = boomArray[x][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y] + boomArray[x + <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x]</span><br><span class="line">[y + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">mySet(x, y, num);</span><br><span class="line"><span class="built_in">console</span>.log(num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x == (boomArray.length - <span class="number">1</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span> (y == <span class="number">0</span>)</span><br><span class="line">num = boomArray[x - <span class="number">1</span>][<span class="number">0</span>] + boomArray[x - <span class="number">1</span>][<span class="number">1</span>] + boomArray[x][y + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (y == boomArray[x].length - <span class="number">1</span>)</span><br><span class="line">num = boomArray[x][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y];</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">num = boomArray[x][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y] + boomArray[x - <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x]</span><br><span class="line">[y + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">mySet(x, y, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (y == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span> &amp;&amp; x != boomArray.length - <span class="number">1</span>) &#123;</span><br><span class="line">num = boomArray[x - <span class="number">1</span>][y] + boomArray[x - <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x][y + <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x +</span><br><span class="line"><span class="number">1</span>][y];</span><br><span class="line">mySet(x, y, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (y == boomArray[x].length - <span class="number">1</span> &amp;&amp; x != <span class="number">0</span> &amp;&amp; x != boomArray.length - <span class="number">1</span>) &#123;</span><br><span class="line">num = boomArray[x - <span class="number">1</span>][y] + boomArray[x - <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x +</span><br><span class="line"><span class="number">1</span>][y];</span><br><span class="line">mySet(x, y, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x != <span class="number">0</span> &amp;&amp; x != boomArray.length - <span class="number">1</span> &amp;&amp; y != <span class="number">0</span> &amp;&amp; y != boomArray[x].length - <span class="number">1</span>) &#123;</span><br><span class="line">num = boomArray[x - <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y] + boomArray[x - <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x][y + <span class="number">1</span>] + boomArray[x +</span><br><span class="line"><span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y] + boomArray[x + <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x][y - <span class="number">1</span>];</span><br><span class="line">mySet(x, y, num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mySet</span>(<span class="params">x, y, num</span>) </span>&#123;</span><br><span class="line">allRow[x].children[y].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"value"</span>, num);</span><br><span class="line">allRow[x].children[y].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"disabled"</span>, <span class="string">"disabled"</span>);</span><br><span class="line">allRow[x].children[y].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"class"</span>, <span class="string">"safe"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createOperat</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">btn1.setAttribute(<span class="string">"type"</span>, <span class="string">"button"</span>);</span><br><span class="line">btn1.setAttribute(<span class="string">"value"</span>, <span class="string">"重置"</span>);</span><br><span class="line">btn1.setAttribute(<span class="string">"onclick"</span>, <span class="string">"reset()"</span>);</span><br><span class="line">btn2.setAttribute(<span class="string">"type"</span>, <span class="string">"button"</span>);</span><br><span class="line">btn1.setAttribute(<span class="string">"class"</span>, <span class="string">"operat"</span>);</span><br><span class="line">btn2.setAttribute(<span class="string">"value"</span>, <span class="string">"显示所有格子"</span>);</span><br><span class="line">btn2.setAttribute(<span class="string">"onclick"</span>, <span class="string">"showAllTd()"</span>);</span><br><span class="line">btn2.setAttribute(<span class="string">"class"</span>, <span class="string">"operat"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reset</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">location.reload();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showAllTd</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; YLen; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; XLen; j++) &#123;</span><br><span class="line">allRow[i].children[j].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"class"</span>, <span class="string">"displayAll"</span>);</span><br><span class="line">allRow[i].children[j].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"value"</span>, boomArray[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="第二版"><a href="#第二版" class="headerlink" title="第二版"></a>第二版</h3><p>第二版在第一版的基础上增加了显示剩余安全块的功能和设置雷的个数的功能</p><p><strong>效果：</strong></p><div align="center"><img src="/2019/11/29/%E5%86%99%E7%9A%84%E4%B8%80%E4%B8%AA%E6%89%AB%E9%9B%B7%E7%AE%80%E5%8D%95%E7%89%88/2.1.jpg" alt="2-1" style="zoom:50%;"></div>**主要思路和第一版是一样的，不一样的地方是table标签里的表格使用创建节点的方式创建的**<p>剩余安全块：用格子总个数 - 雷的个数，然后每点一下不是雷就减一</p><p>设置雷数：当点击了确定后将原有的表格里的所有子节点删除，再重新往table标签里添加表格，并重新生成雷的个数。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><div align="center">HTML5+CSS部分</div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>扫雷<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">*&#123;</span><br><span class="line">padding: 0;</span><br><span class="line">margin: 0;</span><br><span class="line">&#125;</span><br><span class="line">h2&#123;</span><br><span class="line">text-align: center;</span><br><span class="line">padding-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.content</span>&#123;</span></span><br><span class="line">margin: 20px auto 0 auto;</span><br><span class="line">width: 450px;</span><br><span class="line"><span class="css"><span class="comment">/* height: 500px; */</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.tip</span>&#123;</span></span><br><span class="line">display: flex;</span><br><span class="line">justify-content: space-around;</span><br><span class="line">align-items: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#notBoomNum</span><span class="selector-attr">[type="text"]</span>&#123;</span></span><br><span class="line">text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">width: 100%;</span><br><span class="line">height: 450px;</span><br><span class="line">text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#operat</span>&#123;</span></span><br><span class="line">display: flex;</span><br><span class="line">justify-content: center;</span><br><span class="line">width: 450px;</span><br><span class="line">margin: 10px auto;</span><br><span class="line"><span class="css"><span class="comment">/* border: 1px solid #000; */</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.operat</span>&#123;</span></span><br><span class="line">background-color: red;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">width: 50px;</span><br><span class="line">height: 30px;</span><br><span class="line">&#125;</span><br><span class="line">input&#123;</span><br><span class="line">width: 100%;</span><br><span class="line">height: 100%;</span><br><span class="line">border: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#notBoomNum</span>&#123;</span></span><br><span class="line">width: 2em;</span><br><span class="line">height: 2em;</span><br><span class="line"><span class="css"><span class="comment">/* border: 1px solid #999; */</span></span></span><br><span class="line">background-color: rgba(0, 0, 0, 0);</span><br><span class="line"><span class="css"><span class="selector-tag">font-size</span>: 1<span class="selector-class">.5em</span>;</span></span><br><span class="line">margin-bottom: 10px;</span><br><span class="line"><span class="css"><span class="selector-tag">height</span>: 1<span class="selector-class">.5em</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#setBoom</span>&#123;</span></span><br><span class="line">width: 55%;</span><br><span class="line">position: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#showTd</span>&#123;</span></span><br><span class="line">display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#setValue</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#999</span>;</span></span><br><span class="line">width: 6em;</span><br><span class="line">height: 2em;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#setBtn</span>&#123;</span></span><br><span class="line">position: absolute;</span><br><span class="line">right: 0%;</span><br><span class="line">top: 0%;</span><br><span class="line">width: 20%;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#999</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-id">#setBtn</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">background-color: orangered;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">td&#123;</span><br><span class="line">width: 10px;</span><br><span class="line">height: 10px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.safe</span>&#123;</span></span><br><span class="line">background-color: limegreen;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.bomb</span>&#123;</span></span><br><span class="line">background-color: darkred;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.displayAll</span>&#123;</span></span><br><span class="line">background-color: darkorange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>扫雷<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tip"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"showTd"</span>&gt;</span></span><br><span class="line">剩余安全格子：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"notBoomNum"</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"setBoom"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"setBoom-input"</span>&gt;</span>设置雷的数量：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"setValue"</span> <span class="attr">placeholder</span>=<span class="string">"默认值：20"</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"setBtn"</span> <span class="attr">value</span>=<span class="string">"确定"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">id</span>=<span class="string">"tab"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"operat"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><div align="center">JavaScript部分</div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="built_in">window</span>.onload = tableInit;</span><br><span class="line"><span class="keyword">var</span> opera = <span class="built_in">document</span>.getElementById(<span class="string">'operat'</span>);</span><br><span class="line"><span class="keyword">var</span> btn1 = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line"><span class="keyword">var</span> btn2 = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line"><span class="comment">//没有雷的格子数量</span></span><br><span class="line"><span class="keyword">var</span> notBoomNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//正方形表格的边的格子数</span></span><br><span class="line"><span class="keyword">var</span> edgeLattice = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//雷的数量</span></span><br><span class="line"><span class="keyword">var</span> boomNum = <span class="number">20</span>;</span><br><span class="line"><span class="comment">// 用于存放雷的数组</span></span><br><span class="line"><span class="keyword">var</span> boomArray = <span class="keyword">new</span> <span class="built_in">Array</span>(edgeLattice);</span><br><span class="line"><span class="keyword">var</span> XLen = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> YLen = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; boomArray.length; i++) &#123;</span><br><span class="line">boomArray[i] = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">XLen = boomArray[<span class="number">0</span>].length;</span><br><span class="line">YLen = boomArray.length;</span><br><span class="line">notBoomNum = (XLen * YLen) - boomNum;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"共"</span> + XLen * YLen + <span class="string">"个格子"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"一共有"</span> + boomNum + <span class="string">"个雷"</span>);</span><br><span class="line"><span class="comment">//初始化雷的个数</span></span><br><span class="line">setBoom(boomNum);</span><br><span class="line">createOperat();</span><br><span class="line">opera.appendChild(btn1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> allRow = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'tr'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inputInit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; YLen; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; XLen; j++) &#123;</span><br><span class="line"><span class="keyword">var</span> thisBtn = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line">thisBtn.setAttribute(<span class="string">"type"</span>, <span class="string">"button"</span>);</span><br><span class="line">thisBtn.setAttribute(<span class="string">"value"</span>, <span class="string">" "</span>);</span><br><span class="line">thisBtn.setAttribute(<span class="string">"onclick"</span>, <span class="string">"isBoom("</span> + i + <span class="string">","</span> + j + <span class="string">")"</span>);</span><br><span class="line">allRow[i].children[j].appendChild(thisBtn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setBoom</span>(<span class="params">boom_number</span>) </span>&#123;</span><br><span class="line">boomNum = boom_number;</span><br><span class="line">notBoomNum = (XLen * YLen) - boomNum;</span><br><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; boomArray.length; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; boomArray[i].length; j++) &#123;</span><br><span class="line">boomArray[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//随机数生成boomNum个雷</span></span><br><span class="line"><span class="keyword">while</span> (count &lt; boom_number) &#123;</span><br><span class="line">x = <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random() * (YLen)) - <span class="number">1</span>;</span><br><span class="line">y = <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random() * (XLen)) - <span class="number">1</span>;</span><br><span class="line"><span class="comment">//防止类的位置重复</span></span><br><span class="line"><span class="keyword">if</span> (boomArray[x][y] == <span class="number">0</span>) &#123;</span><br><span class="line">boomArray[x][y] = <span class="number">1</span>;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">setTip();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isBoom</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line"><span class="comment">// var = oldBoomNum = boomNum;</span></span><br><span class="line"><span class="comment">// if(boomNum &lt;)</span></span><br><span class="line"><span class="keyword">var</span> td = boomArray[x][y];</span><br><span class="line"><span class="keyword">if</span> (td != <span class="number">1</span>) &#123;</span><br><span class="line">notBoomNum--;</span><br><span class="line">showBoom(x, y);</span><br><span class="line">setTip();</span><br><span class="line"><span class="keyword">if</span> (notBoomNum == <span class="number">0</span>) &#123;</span><br><span class="line">alert(<span class="string">"恭喜您，成功通关！"</span>);</span><br><span class="line">location.reload();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">alert(<span class="string">"BOOM!!! Game Over！"</span>);</span><br><span class="line">showAllTd();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showBoom</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (y == <span class="number">0</span>)</span><br><span class="line">num = boomArray[<span class="number">0</span>][<span class="number">1</span>] + boomArray[<span class="number">1</span>][<span class="number">1</span>] + boomArray[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (y == boomArray[x].length - <span class="number">1</span>)</span><br><span class="line">num = boomArray[<span class="number">0</span>][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y];</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">num = boomArray[x][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y] + boomArray[x + <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x]</span><br><span class="line">[y + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">mySet(x, y, num);</span><br><span class="line"><span class="built_in">console</span>.log(num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x == (boomArray.length - <span class="number">1</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span> (y == <span class="number">0</span>)</span><br><span class="line">num = boomArray[x - <span class="number">1</span>][<span class="number">0</span>] + boomArray[x - <span class="number">1</span>][<span class="number">1</span>] + boomArray[x][y + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (y == boomArray[x].length - <span class="number">1</span>)</span><br><span class="line">num = boomArray[x][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y];</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">num = boomArray[x][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y] + boomArray[x - <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x]</span><br><span class="line">[y + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">mySet(x, y, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (y == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span> &amp;&amp; x != boomArray.length - <span class="number">1</span>) &#123;</span><br><span class="line">num = boomArray[x - <span class="number">1</span>][y] + boomArray[x - <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x][y + <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x +</span><br><span class="line"><span class="number">1</span>][y];</span><br><span class="line">mySet(x, y, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (y == boomArray[x].length - <span class="number">1</span> &amp;&amp; x != <span class="number">0</span> &amp;&amp; x != boomArray.length - <span class="number">1</span>) &#123;</span><br><span class="line">num = boomArray[x - <span class="number">1</span>][y] + boomArray[x - <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x][y - <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x +</span><br><span class="line"><span class="number">1</span>][y];</span><br><span class="line">mySet(x, y, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x != <span class="number">0</span> &amp;&amp; x != boomArray.length - <span class="number">1</span> &amp;&amp; y != <span class="number">0</span> &amp;&amp; y != boomArray[x].length - <span class="number">1</span>) &#123;</span><br><span class="line">num = boomArray[x - <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x - <span class="number">1</span>][y] + boomArray[x - <span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x][y + <span class="number">1</span>] + boomArray[x +</span><br><span class="line"><span class="number">1</span>][y + <span class="number">1</span>] + boomArray[x + <span class="number">1</span>][y] + boomArray[x + <span class="number">1</span>][y - <span class="number">1</span>] + boomArray[x][y - <span class="number">1</span>];</span><br><span class="line">mySet(x, y, num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mySet</span>(<span class="params">x, y, num</span>) </span>&#123;</span><br><span class="line">allRow[x].children[y].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"value"</span>, num);</span><br><span class="line">allRow[x].children[y].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"disabled"</span>, <span class="string">"disabled"</span>);</span><br><span class="line">allRow[x].children[y].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"class"</span>, <span class="string">"safe"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createOperat</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">btn1.setAttribute(<span class="string">"type"</span>, <span class="string">"button"</span>);</span><br><span class="line">btn1.setAttribute(<span class="string">"value"</span>, <span class="string">"重置"</span>);</span><br><span class="line">btn1.setAttribute(<span class="string">"onclick"</span>, <span class="string">"reset()"</span>);</span><br><span class="line">btn2.setAttribute(<span class="string">"type"</span>, <span class="string">"button"</span>);</span><br><span class="line">btn1.setAttribute(<span class="string">"class"</span>, <span class="string">"operat"</span>);</span><br><span class="line">btn2.setAttribute(<span class="string">"value"</span>, <span class="string">"显示所有格子"</span>);</span><br><span class="line">btn2.setAttribute(<span class="string">"onclick"</span>, <span class="string">"showAllTd()"</span>);</span><br><span class="line">btn2.setAttribute(<span class="string">"class"</span>, <span class="string">"operat"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reset</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">location.reload();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showAllTd</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; YLen; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; XLen; j++) &#123;</span><br><span class="line">allRow[i].children[j].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"class"</span>, <span class="string">"displayAll"</span>);</span><br><span class="line">allRow[i].children[j].childNodes[<span class="number">0</span>].setAttribute(<span class="string">"value"</span>, boomArray[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tableInit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> tab = <span class="built_in">document</span>.getElementById(<span class="string">'tab'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; XLen; i++) &#123;</span><br><span class="line"><span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">'tr'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(tr);</span><br><span class="line">tab.appendChild(tr);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; YLen; j++) &#123;</span><br><span class="line"><span class="keyword">var</span> td = <span class="built_in">document</span>.createElement(<span class="string">'td'</span>);</span><br><span class="line">tr.appendChild(td);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">inputInit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setTip</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> tip = <span class="built_in">document</span>.getElementById(<span class="string">'notBoomNum'</span>);</span><br><span class="line">tip.setAttribute(<span class="string">'value'</span>, notBoomNum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clearTable</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> tab = <span class="built_in">document</span>.getElementById(<span class="string">'tab'</span>);</span><br><span class="line"><span class="keyword">var</span> childs = tab.childNodes;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = childs.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">tab.removeChild(tab.childNodes[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'setBtn'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> value = <span class="built_in">document</span>.getElementById(<span class="string">'setValue'</span>).value || <span class="number">20</span>;</span><br><span class="line">boom_num = value;</span><br><span class="line">setBoom(boom_num);</span><br><span class="line"><span class="built_in">console</span>.log(boomNum + <span class="string">'---'</span>);</span><br><span class="line">clearTable();</span><br><span class="line">tableInit();</span><br><span class="line">setTip();</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="试玩"><a href="#试玩" class="headerlink" title="试玩"></a>试玩</h3><p><strong><a href="/写的一个扫雷简单版/demo.html">试玩</a></strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录我在Mooc上的代码</title>
      <link href="2019/11/23/%E8%AE%B0%E5%BD%95%E6%88%91%E5%9C%A8Mooc%E4%B8%8A%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
      <url>2019/11/23/%E8%AE%B0%E5%BD%95%E6%88%91%E5%9C%A8Mooc%E4%B8%8A%E7%9A%84%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="面向对象程序设计——Java语言-翁恺"><a href="#面向对象程序设计——Java语言-翁恺" class="headerlink" title="面向对象程序设计——Java语言[翁恺]"></a>面向对象程序设计——Java语言[翁恺]</h2><h3 id="课程代码记录"><a href="#课程代码记录" class="headerlink" title="课程代码记录"></a>课程代码记录</h3><p>大一学习了一年的Java，本以为学校会一直以Java为核心开展教学任务，然而到了大二，后端语言已经从Java换成了PHP，虽然都是后端语言，但不知为何对Java颇有怀恋，于是又来到了翁恺老师的Java课。其实一共有两门Java课程，分别是 <strong>零基础学Java语言</strong> 和<strong>面向对象程序设计</strong>，毕竟已经学了一年，所有基础部分的课程就没有看了，直接来到了<strong>面向对象程序设计</strong></p><p>于是就在某一年的某个月某一天<em>2019年11月23日</em>  把之前部署在Github上的HEXO博客又重新部署了一遍，想着在课余时间把自己学习的Java代码做一个记录，所以就有了这一篇博客~</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=4894309&auto=0&height=66"></iframe>### 第一周编程题 -- 分数<p><img src="/2019/11/23/%E8%AE%B0%E5%BD%95%E6%88%91%E5%9C%A8Mooc%E4%B8%8A%E7%9A%84%E4%BB%A3%E7%A0%81/1.1.png" alt="第一周题目"></p><a id="more"></a><p>我的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        Fraction a = <span class="keyword">new</span> Fraction(in.nextInt(), in.nextInt());</span><br><span class="line">        Fraction b = <span class="keyword">new</span> Fraction(in.nextInt(),in.nextInt());</span><br><span class="line">        a.print();</span><br><span class="line">        b.print();</span><br><span class="line">        a.plus(b).print();</span><br><span class="line">        a.multiply(b).plus(<span class="keyword">new</span> Fraction(<span class="number">5</span>,<span class="number">6</span>)).print();</span><br><span class="line">        a.print();</span><br><span class="line">        b.print();</span><br><span class="line">        in.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fraction</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> b;</span><br><span class="line">    Fraction(<span class="keyword">int</span> a, <span class="keyword">int</span> b) &#123;</span><br><span class="line">        <span class="keyword">this</span>.a = a;</span><br><span class="line">        <span class="keyword">this</span>.b = b;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="function"><span class="keyword">double</span> <span class="title">toDouble</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">double</span>)a/b;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        将自己的分数和r的分数相加，产生一个新的Fraction的对象。注意小学四年级学过两个分数如何相加的哈。</span></span><br><span class="line">        <span class="function">Fraction <span class="title">plus</span><span class="params">(Fraction r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Fraction(<span class="keyword">this</span>.a * r.b + <span class="keyword">this</span>.b * r.a, <span class="keyword">this</span>.b * r.b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    将自己的分数和r的分数相乘，产生一个新的Fraction的对象。</span></span><br><span class="line">        <span class="function">Fraction <span class="title">multiply</span><span class="params">(Fraction r)</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Fraction(r.a * <span class="keyword">this</span>.a,r.b * <span class="keyword">this</span>.b);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        将自己以“分子/分母”的形式输出到标准输出，并带有回车换行。如果分数是1/1，应该输出1。当分子大于分母时，不需要提出整数部分，即31/30是一个正确的输出。</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a == b)&#123;</span><br><span class="line">                System.out.println(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二周编程题-–-有秒计时的数字时钟"><a href="#第二周编程题-–-有秒计时的数字时钟" class="headerlink" title="第二周编程题 – 有秒计时的数字时钟"></a>第二周编程题 – 有秒计时的数字时钟</h3><p><img src="/2019/11/23/%E8%AE%B0%E5%BD%95%E6%88%91%E5%9C%A8Mooc%E4%B8%8A%E7%9A%84%E4%BB%A3%E7%A0%81/2.1.png" alt="第二周题目"></p><p><strong>先贴一下视频里的代码大概：</strong></p><p><strong>UML:</strong></p><p><img src="/2019/11/23/%E8%AE%B0%E5%BD%95%E6%88%91%E5%9C%A8Mooc%E4%B8%8A%E7%9A%84%E4%BB%A3%E7%A0%81/uml01.png" alt="UML-2.1"></p><p><strong>Display</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Display</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> limit = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Display</span><span class="params">( <span class="keyword">int</span> limit )</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.limit = limit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">increase</span><span class="params">()</span></span>&#123;</span><br><span class="line">        value ++;</span><br><span class="line">        <span class="keyword">if</span>( value == limit )&#123;</span><br><span class="line">            value = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getValue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Clock</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mooc.java2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Clock</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Display hour = <span class="keyword">new</span> Display(<span class="number">24</span>);</span><br><span class="line">    <span class="keyword">private</span> Display minute = <span class="keyword">new</span> Display(<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">            minute.increase();</span><br><span class="line">            <span class="keyword">if</span> (minute.getValue() == <span class="number">0</span>) &#123;</span><br><span class="line">                hour.increase();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.printf(<span class="string">"%02d : %02d\n"</span>, hour.getValue(), minute.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Clock clock = <span class="keyword">new</span> Clock();</span><br><span class="line">        clock.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong></p><p><img src="/2019/11/23/%E8%AE%B0%E5%BD%95%E6%88%91%E5%9C%A8Mooc%E4%B8%8A%E7%9A%84%E4%BB%A3%E7%A0%81/2.1_run.png" alt="运行结果"></p><hr><p><strong>下面放上这周的代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.String.format;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Display</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> limit = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Display</span><span class="params">(<span class="keyword">int</span> limit)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.limit = limit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">increase</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        value++;</span><br><span class="line">        <span class="keyword">if</span> (value == limit) &#123;</span><br><span class="line">            value = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setValue</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Display hour = <span class="keyword">new</span> Display(<span class="number">24</span>);</span><br><span class="line">    <span class="keyword">private</span> Display minute = <span class="keyword">new</span> Display(<span class="number">60</span>);</span><br><span class="line">    <span class="keyword">private</span> Display second = <span class="keyword">new</span> Display(<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Clock</span><span class="params">(<span class="keyword">int</span> hour, <span class="keyword">int</span> minute, <span class="keyword">int</span> second)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hour.setValue(hour);</span><br><span class="line">        <span class="keyword">this</span>.minute.setValue(minute);</span><br><span class="line">        <span class="keyword">this</span>.second.setValue(second);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        second.increase();</span><br><span class="line">        <span class="keyword">if</span> (second.getValue() == <span class="number">0</span>) &#123;</span><br><span class="line">            minute.increase();</span><br><span class="line">            <span class="keyword">if</span> (minute.getValue() == <span class="number">0</span>) &#123;</span><br><span class="line">                hour.increase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String ret = format(<span class="string">"%02d:%02d:%02d"</span>, hour.getValue(), minute.getValue(), second.getValue());</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        java.util.Scanner in = <span class="keyword">new</span> java.util.Scanner(System.in);</span><br><span class="line">        Clock clock = <span class="keyword">new</span> Clock(in.nextInt(), in.nextInt(), in.nextInt());</span><br><span class="line">        clock.tick();</span><br><span class="line">        System.out.println(clock);</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>未完待续<del>~</del></p>]]></content>
      
      
      <categories>
          
          <category> Java笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> java </tag>
            
            <tag> mooc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 2019年5月13日 学习记录</title>
      <link href="2019/05/13/2019-5-13-MySQL-procedure-function/"/>
      <url>2019/05/13/2019-5-13-MySQL-procedure-function/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本周一，我们又学习了MySQL的存储过程和存储函数的创建和调用。</p></blockquote><h3 id="首先是存储过程"><a href="#首先是存储过程" class="headerlink" title="首先是存储过程"></a>首先是存储过程</h3><ul><li>语法：</li></ul><p><img src="/2019/05/13/2019-5-13-MySQL-procedure-function/procedure.png" alt="procedure"></p><ul><li><p>小练习：</p><p>  有一些数据：</p><div align="center">  <table><tr><th>学号</th><th>姓名</th><th>性别</th><th>专业</th></tr><tr><td>1001</td><td>张三</td><td>男</td><td>计算机应用技术</td></tr><tr><td>1002</td><td>李四</td><td>男</td><td>计算机应用技术</td></tr><tr><td>2001</td><td>赵丽</td><td>女</td><td>多媒体技术</td></tr><tr><td>3001</td><td>王军</td><td>男</td><td>应用电子技术</td></tr><tr><td>4004</td><td>杨洋</td><td>男</td><td>楼宇智能化技术</td></tr><tr><td>5010</td><td>谢楠楠</td><td>女</td><td>计算机网络技术</td></tr></table></div><p>  题目：创建一个存储过程，并求出表中指定专业的学生人数。</p><p>  这里提前准备了数据</p></li></ul><a id="more"></a><div align="center"><p><img src="/2019/05/13/2019-5-13-MySQL-procedure-function/1.1.png" alt="准备数据"></p></div><pre><code>代码：    delimiter //    create procedure num_proc(in s_major varchar(20),out num int)    begin    select count(*) into num from stu_info where stu_info.major=s_major;    end//</code></pre><ul><li><p>下面来测试一下：</p><ol><li><p>call num_proc(‘计算机应用技术’,@n);</p></li><li><p>select @n;</p></li></ol></li></ul><ul><li><p>结果：</p>  <div align="center"><p>  <img src="/2019/05/13/2019-5-13-MySQL-procedure-function/1.2.png" alt="1-2"></p></div></li></ul><h3 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h3>]]></content>
      
      
      <categories>
          
          <category> MySQL笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 学习记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇Hexo Blog</title>
      <link href="2019/05/11/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87Blog/"/>
      <url>2019/05/11/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87Blog/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天，第一次将Hexo搭建起来了并且部署到了 <a href="(https://github.com)" title="Github">Github</a> 上，当时的心情，无疑是非常激动的……</p></blockquote><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><hr><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库-触发器小练习</title>
      <link href="2019/05/09/MySQL-trigger/"/>
      <url>2019/05/09/MySQL-trigger/</url>
      
        <content type="html"><![CDATA[<p>本周，数据库上到了触发器（已经上完了），于是老师想我们分享了他之前的一篇小论文，讲的是触发器在商城里的应用—利用触发器来模拟用户在进行下单、修改订单、退货操作之后相关商品信息的变化。</p><hr><p>首先，让我们来假设一下：现在我们有一些商品，如表</p><table><thead><tr><th align="center">商品编号（Product id）</th><th align="center">商品名称（Product name）</th><th align="center">数量（Number）</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">单反</td><td align="center">30</td></tr><tr><td align="center">2</td><td align="center">自行车</td><td align="center">20</td></tr><tr><td align="center">3</td><td align="center">笔记本</td><td align="center">15</td></tr></tbody></table><p>下面，就开始将结构在数据库中搭建起来吧！</p><a id="more"></a><ul><li>创建数据库并使用数据库</li></ul><div align="center"><p><img src="/2019/05/09/MySQL-trigger/image-1.png" alt></p></div><ul><li>创建商品信息表</li></ul><div align="center"><p><img src="/2019/05/09/MySQL-trigger/image-2.png" alt></p></div><ul><li>下面将商品信息录入productInfo表</li></ul><div align="center"><p><img src="/2019/05/09/MySQL-trigger/image-3.png" alt></p></div><p>由于商品名称是中文，所以在录入信息前要将编码设置为gbk</p><p><strong>查看表productInfo</strong></p><div align="center"><p><img src="/2019/05/09/MySQL-trigger/image-4.png" alt></p></div>太晚了……先睡觉😜（2019年5月9日23点38分）<p>（2019年5月12日16点31分）是的，我又回来了，那么接下来干什么呢？</p><p>首先，要模拟一个用户下单的操作：当用户下单时，productInfo表中对应的商品应该减少购买的件数，而此时对应的订单表就应该记录下来对应商品购买的件数。</p><p>  那么，订单表呢？ ——好吧，我们先来建一个订单表，结构如下：</p><table><thead><tr><th>订单编号（Order id）</th><th>商品编号（Product id）</th><th>数量（number）</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><div align="center"><p><img src="/2019/05/09/MySQL-trigger/image-5.png" alt></p></div><hr><p>用户下单时，orders表就要添加相应信息，那么就可以用Insert触发器来进行操作：</p><div align="center"><p><img src="/2019/05/09/MySQL-trigger/image-6.png" alt></p><p>测试：假设我们购买了单反5台</p><p><img src="/2019/05/09/MySQL-trigger/image-7.png" alt></p><p>查看productInfo表和orders表：</p><p><img src="/2019/05/09/MySQL-trigger/image-8.png" alt></p><p>可以看到对应的商品信息发生了改变</p></div>]]></content>
      
      
      <categories>
          
          <category> MySQL笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 学习记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mooc-零基础学Java语言（翁恺）第四周编程题</title>
      <link href="2019/04/14/Mooc-java-four/"/>
      <url>2019/04/14/Mooc-java-four/</url>
      
        <content type="html"><![CDATA[<p>不知从何时起，这网站我就没再管了，一直到这个星期周末…</p><p>在寝室实在无聊，中午起来，便看到室友在学习了，嗯，我就是那样，只要旁边有人在学习，我自身的学习欲望就变得愈加变大，于是还是和之前一样，去了<a href="https://www.icourse163.org/" target="_blank" rel="noopener">中国大学Mooc</a>，专门来到了翁恺的课程，点开了其实已经看过了的Java基础课程，当然这是最新的一次开课，之前看完了以前的，但没开课就做不了题目（提交不了)所以便看了看题目：</p><div align="center"><p><img src="/2019/04/14/Mooc-java-four/1-1.png" alt="题目1"></p></div><p>第四周编程题1</p><p>首先是这个题，题目读了一遍便开始试着写了，第一次写的时候，便把需求搞错了，明明是第n个素数到第m个素数，却一气呵成的写成了n–m之间的素数，嗯，读题的时候还特意看了眼“注意”，却还是在写的时候“没按套路出牌” emmm……</p><p>对于这个题目，我的思路是：</p><p>因为第一个素数就是2，所以循环从2开始，以后每找到一个素数，计数器+1，当计数器 n ≤ count ≤ m 时，这个素数也必然就是我要找的数了</p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">题目内容：</span></span><br><span class="line"><span class="comment">我们认为2是第一个素数，3是第二个素数，5是第三个素数，依次类推。</span></span><br><span class="line"><span class="comment">现在，给定两个整数n和m，0&lt;n&lt;=m&lt;=200，你的程序要计算第n个素数到第m个素数之间所有的素数的和</span></span><br><span class="line"><span class="comment">包括第n个素数和第m个素数。</span></span><br><span class="line"><span class="comment">注意，是第n个素数到第m个素数之间的所有的素数，并不是n和m之间的所有的素数。</span></span><br><span class="line"><span class="comment">输入格式:</span></span><br><span class="line"><span class="comment">两个整数，第一个表示n，第二个表示m。</span></span><br><span class="line"><span class="comment">输出格式：</span></span><br><span class="line"><span class="comment">一个整数，表示第n个素数到第m个素数之间所有的素数的和，包括第n个素数和第m个素数。</span></span><br><span class="line"><span class="comment">输入样例：</span></span><br><span class="line"><span class="comment">2 4</span></span><br><span class="line"><span class="comment">输出样例：</span></span><br><span class="line"><span class="comment">15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> m,n,sum = <span class="number">0</span>,count = <span class="number">0</span>;</span><br><span class="line">n = in.nextInt();</span><br><span class="line">m = in.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">2</span>;count&lt;=m; i++ ) &#123;</span><br><span class="line"><span class="keyword">if</span>( isPrime(i) ) &#123;</span><br><span class="line">count ++;</span><br><span class="line"><span class="keyword">if</span>( count &gt;= n &amp;&amp; count &lt;= m ) &#123;</span><br><span class="line">sum += i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(sum);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isPrime</span><span class="params">( <span class="keyword">int</span> num )</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> ret = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">2</span>; i &lt; num; i++ ) &#123;</span><br><span class="line"><span class="keyword">if</span>( num%i == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( i == num ) &#123;</span><br><span class="line">ret = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><a id="more"></a><div align="center"><p><img src="/2019/04/14/Mooc-java-four/2-2.png" alt></p><!-- <img src="images/2019/04/2-2.png"> --></div>接下来，就是第2题了：<div align="center"><p><img src="/2019/04/14/Mooc-java-four/Snipaste_2019-04-14_21-28-30.png" alt="第2题题目"></p><!-- <img src="images/2019/04/Snipaste_2019-04-14_21-28-30.png",alt="第2题题目"> --></div><p>对于这个题目来说，我实现了题目的要求，但是只得了3分（满分5分）</p><div align="center"><p><img src="/2019/04/14/Mooc-java-four/Snipaste_2019-04-14_21-32-14.png" alt></p><!-- <img src="images/2019/04/Snipaste_2019-04-14_21-32-14.png"> --></div>有没有大佬出来给出一份最佳的代码...<p>我目前的思路，是用一个数组 py 存放0~9的拼音，然后将每一位的值放到另一个数组 nums 里，输出的时候输出py[num[i]] . 代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">duNum</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">题目内容：</span></span><br><span class="line"><span class="comment">你的程序要读入一个整数，范围是[-100000,100000]。然后，用汉语拼音将这个整数的每一位输出出来。</span></span><br><span class="line"><span class="comment">如输入1234，则输出：</span></span><br><span class="line"><span class="comment">yi er san si</span></span><br><span class="line"><span class="comment">注意，每个字的拼音之间有一个空格，但是最后的字后面没有空格。当遇到负数时，在输出的开头加上“fu”，</span></span><br><span class="line"><span class="comment">如-2341输出为：</span></span><br><span class="line"><span class="comment">fu er san si yi</span></span><br><span class="line"><span class="comment">输入格式:</span></span><br><span class="line"><span class="comment">一个整数，范围是[-100000,100000]。</span></span><br><span class="line"><span class="comment">输出格式：</span></span><br><span class="line"><span class="comment">表示这个整数的每一位数字的汉语拼音，每一位数字的拼音之间以空格分隔，末尾没有空格。</span></span><br><span class="line"><span class="comment">输入样例：</span></span><br><span class="line"><span class="comment">-30</span></span><br><span class="line"><span class="comment">输出样例：</span></span><br><span class="line"><span class="comment">fu san ling</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">String[] py = &#123;<span class="string">"ling"</span>,<span class="string">"yi"</span>,<span class="string">"er"</span>,<span class="string">"san"</span>,<span class="string">"si"</span>,<span class="string">"wu"</span>,<span class="string">"liu"</span>,<span class="string">"qi"</span>,<span class="string">"ba"</span>,<span class="string">"jiu"</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> num = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(num&lt;<span class="number">0</span>) &#123;</span><br><span class="line">System.out.print(<span class="string">"fu "</span>);</span><br><span class="line">num = num * -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> len = (<span class="string">""</span>+num).length();</span><br><span class="line"><span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line"><span class="keyword">while</span>(num%<span class="number">10</span> != <span class="number">0</span>) &#123;</span><br><span class="line">nums[len-i-<span class="number">1</span>] = num%<span class="number">10</span>;</span><br><span class="line">num /= <span class="number">10</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; len; i++ ) &#123;</span><br><span class="line">System.out.print(py[nums[i]]);</span><br><span class="line"><span class="keyword">if</span>( i &lt; len-<span class="number">1</span> ) &#123;</span><br><span class="line">System.out.print(<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>    <p>测试结果：</p><div align="center"><p><img src="/2019/04/14/Mooc-java-four/Snipaste_2019-04-14_21-43-50.png" alt></p><!-- <img src="images/2019/04/Snipaste_2019-04-14_21-43-50.png"> --><p>正数测试结果</p><p><img src="/2019/04/14/Mooc-java-four/Snipaste_2019-04-14_21-44-17.png" alt></p><!-- <img src="images/2019/04/Snipaste_2019-04-14_21-44-17.png"> --><p>负数测试结果</p></div>]]></content>
      
      
      <categories>
          
          <category> Java笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mooc </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
